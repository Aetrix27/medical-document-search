{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\dev\\\\courses\\\\acs1320\\\\medical-documents-search\\\\src\\\\components\\\\Document\\\\Document.js\",\n    _s = $RefreshSig$();\n\n// src/POPOSSpace.js\nimport { Link } from 'react-router-dom';\nimport './Document.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Document(props) {\n  _s();\n\n  // Get the\n  const {\n    name,\n    image,\n    id\n  } = props;\n  let [data, setData] = useState(null);\n  var doctors = [];\n\n  const getSelection = key => {\n    //Get checkbox values of skills\n    doctors.push(key); //const refsArray  =  foo.map(eachId => ({id: eachId, ref: createRef()}));\n    //if (element.checked){\n    //    outputSkills.append(document.getElementById(skills[i].skillName).value)\n    //}\n\n    setData(doctors);\n    return data.map(doctor => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: doctor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Document\",\n    children: [data, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"Document-title\" // add a class name!\n        ,\n        to: `/details/${id}`,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/details/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/images/${image}`,\n        width: \"300\",\n        height: \"300\",\n        alt: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), \"Enter a Doctor\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"addDoctor\",\n      onClick: e => getSelection(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this); //setDoctor(doctors.append(e.target.value))\n}\n\n_s(Document, \"r4Mei8r/vISzc+89378cYwOGDkw=\");\n\n_c = Document;\nexport default Document;\n\nvar _c;\n\n$RefreshReg$(_c, \"Document\");","map":{"version":3,"sources":["C:/Users/David/Desktop/dev/courses/acs1320/medical-documents-search/src/components/Document/Document.js"],"names":["Link","useState","Document","props","name","image","id","data","setData","doctors","getSelection","key","push","map","doctor","process","env","PUBLIC_URL","e","target","value"],"mappings":";;;AAAA;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAsBH,KAA5B;AACA,MAAI,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAA9B;AACA,MAAIQ,OAAO,GAAG,EAAd;;AAGA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B;AACEF,IAAAA,OAAO,CAACG,IAAR,CAAaD,GAAb,EAF0B,CAG1B;AACA;AACA;AAEA;;AACAH,IAAAA,OAAO,CAACC,OAAD,CAAP;AAEA,WAAOF,IAAI,CAACM,GAAL,CAAUC,MAAD,IAAY;AAC1B,0BACE;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPM,CAAP;AASH,GAnBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eACIP,IADJ,eAEE;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,gBADZ,CAC6B;AAD7B;AAEE,QAAA,EAAE,EAAG,YAAWD,EAAG,EAFrB;AAAA,kBAGGF;AAHH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWE,EAAG,EAAzB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAG,GAAES,OAAO,CAACC,GAAR,CAAYC,UAAW,WAAUZ,KAAM,EAApD;AAAuD,QAAA,KAAK,EAAC,KAA7D;AAAmE,QAAA,MAAM,EAAC,KAA1E;AAAgF,QAAA,GAAG,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,iCAaE;AACI,MAAA,WAAW,EAAC,WADhB;AAEI,MAAA,OAAO,EAAGa,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA3BqB,CAkDrB;AAGD;;GArDMlB,Q;;KAAAA,Q;AAuDT,eAAeA,QAAf","sourcesContent":["// src/POPOSSpace.js\r\nimport { Link } from 'react-router-dom'\r\nimport './Document.css'\r\nimport { useState } from 'react'\r\n\r\nfunction Document(props) {\r\n    // Get the\r\n    const { name, image, id } = props\r\n    let [data, setData] = useState(null);\r\n    var doctors = []\r\n\r\n\r\n    const getSelection = (key) => {\r\n      //Get checkbox values of skills\r\n        doctors.push(key);\r\n        //const refsArray  =  foo.map(eachId => ({id: eachId, ref: createRef()}));\r\n        //if (element.checked){\r\n        //    outputSkills.append(document.getElementById(skills[i].skillName).value)\r\n  \r\n        //}\r\n        setData(doctors);\r\n  \r\n        return data.map((doctor) => {\r\n          return (\r\n            <div>\r\n              {doctor}\r\n            </div>\r\n\r\n          )\r\n        });\r\n\r\n    }\r\n    return (\r\n      <div className=\"Document\">\r\n        { data }\r\n        <h1>\r\n          <Link\r\n            className=\"Document-title\" // add a class name!\r\n            to={`/details/${id}`}>\r\n            {name}\r\n          </Link>\r\n        </h1>\r\n        <Link to={`/details/${id}`}>\r\n          <img src={`${process.env.PUBLIC_URL}/images/${image}`} width=\"300\" height=\"300\" alt=\"Hello\" />\r\n        </Link>\r\n        Enter a Doctor\r\n        <input\r\n            placeholder=\"addDoctor\"\r\n            onClick={(e) => getSelection(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Add Doctor</button>\r\n\r\n     \r\n      </div>\r\n    )\r\n    //setDoctor(doctors.append(e.target.value))\r\n\r\n  \r\n  }\r\n\r\nexport default Document"]},"metadata":{},"sourceType":"module"}